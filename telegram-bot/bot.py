import asyncio
import aiohttp
import json
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("TG_BOT_TOKEN", "")
if not BOT_TOKEN:
    raise ValueError("TG_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∏ backend
WEB_APP_URL = os.getenv("WEB_APP_URL", "https://localhost:5173/")
BACKEND_URL = os.getenv("BACKEND_URL", "http://localhost:8000")
SUPPORT_USER_ID = os.getenv("SUPPORT_USER_ID", "")  # ID –≤—Ç–æ—Ä–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()


async def send_telegram_gift(user_id: int, gift_id: str, from_user_name: str = "Crash Stars Game"):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π Telegram –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–æ–∫ —á–µ—Ä–µ–∑ aiogram
        result = await bot.send_gift(
            user_id=user_id,
            gift_id=gift_id,
            text=f"üéâ –ü–æ–¥–∞—Ä–æ–∫ –æ—Ç {from_user_name}!\n\nüí∞ –í—ã–≤–æ–¥ –∏–∑ –∏–≥—Ä—ã Crash Stars –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        )
        print(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ {gift_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞: {e}")
        return False

@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É", web_app=WebAppInfo(url=WEB_APP_URL))],
        [
            InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support"),
            InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="support"),
            InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ])
    
    await message.answer(
        "üéÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Crasher!</b>\n\n"
        "üéØ –ò–≥—Ä–∞–π, –ø–æ–±–µ–∂–¥–∞–π –∏ –≤—ã–≤–æ–¥–∏ –ø–æ–¥–∞—Ä–∫–∏!\n"
        "üéÅ –¢–≤–æ–∏ –≤—ã–∏–≥—Ä—ã—à–∏ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ –≤–∏–¥–µ —Ä–µ–∞–ª—å–Ω—ã—Ö Telegram –ø–æ–¥–∞—Ä–∫–æ–≤\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=keyboard
    )

@dp.message(F.text == "/support")
async def command_support_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /support"""
    await handle_support_request(message.chat.id)

@dp.callback_query(F.data == "support")
async def callback_support_handler(callback: types.CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    await callback.answer()
    await handle_support_request(callback.from_user.id, callback.message)

@dp.callback_query(F.data == "help")
async def callback_help_handler(callback: types.CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏"""
    await callback.answer()
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É", web_app=WebAppInfo(url=WEB_APP_URL))],
        [
            InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support"),
            InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="support"),
            InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ])
    
    await callback.message.edit_text(
        text="‚ÑπÔ∏è <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏–≥—Ä–µ Crash Stars</b>\n\n"
             "üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>\n"
             "‚Ä¢ –î–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫–∏ –∏ –Ω–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –º–Ω–æ–∂–∏—Ç–µ–ª–µ–º –≥—Ä–∞—Ñ–∏–∫–∞\n"
             "‚Ä¢ –ó–∞–±–µ—Ä–∏—Ç–µ –≤—ã–∏–≥—Ä—ã—à –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –º–Ω–æ–∂–∏—Ç–µ–ª—å –≥—Ä–∞—Ñ–∏–∫–∞ —É–ø–∞–¥–µ—Ç\n"
             "‚Ä¢ –ß–µ–º –¥–æ–ª—å—à–µ –∂–¥–µ—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –º–Ω–æ–∂–∏—Ç–µ–ª—å\n\n"
             "üéÅ <b>–í—ã–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–æ–≤:</b>\n"
             "‚Ä¢ –í—ã–∏–≥—Ä–∞–Ω–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ Telegram –ø–æ–¥–∞—Ä–∫–∏\n"
             "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 24 —á–∞—Å–æ–≤\n"
             "‚Ä¢ –û–±—ã—á–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ\n\n"
             "‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ —É–Ω–∏–∫–∞–ª—å–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏–Ω–∞—á–µ –∑–∞—è–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—Å—è —Å–ø—É—Å—Ç—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è\n\n"
             "‚Ä¢ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–∏–≥—Ä–∞—Ç—å (–±–µ–∑ —É—á—ë—Ç–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π) —Å—É–º–º—É, —Ä–∞–≤–Ω—É—é –ø–æ–ª–æ–≤–∏–Ω–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–∞—Ä–∫–∞\n\n"
             "üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b>\n"
             "‚Ä¢ –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–∞—Ä–∫–∞ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å—Ä–∞–∑—É\n"
             "‚Ä¢ –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ\n\n"
             "‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!",
        reply_markup=keyboard
    )

@dp.callback_query(F.data == "main_menu")
async def callback_main_menu_handler(callback: types.CallbackQuery) -> None:
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é"""
    await callback.answer()
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É", web_app=WebAppInfo(url=WEB_APP_URL))],
        [
            InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support"),
            InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ])
    
    await callback.message.edit_text(
        text="üéÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Crash Stars!</b>\n\n"
             "üéØ –ò–≥—Ä–∞–π, –ø–æ–±–µ–∂–¥–∞–π –∏ –≤—ã–≤–æ–¥–∏ –ø–æ–¥–∞—Ä–∫–∏!\n"
             "üéÅ –¢–≤–æ–∏ –≤—ã–∏–≥—Ä—ã—à–∏ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ –≤–∏–¥–µ —Ä–µ–∞–ª—å–Ω—ã—Ö Telegram –ø–æ–¥–∞—Ä–∫–æ–≤\n\n"
             "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=keyboard
    )

async def handle_support_request(chat_id: int, message_to_edit = None) -> None:
    """–û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    if not SUPPORT_USER_ID:
        text = (
            "‚ùå <b>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ–∑–∂–µ."
        )
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ])
        
        if message_to_edit:
            await message_to_edit.edit_text(text=text, reply_markup=keyboard)
        else:
            await bot.send_message(chat_id=chat_id, text=text, reply_markup=keyboard)
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞/–ø—Ä–æ—Ñ–∏–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    if SUPPORT_USER_ID.isdigit():
        # –ï—Å–ª–∏ user_id - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        support_url = f"tg://user?id={SUPPORT_USER_ID}"
        button_text = "üë§ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
        instructions = (
            "üëá <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π:</b>\n"
            "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n"
            "2Ô∏è‚É£ –û—Ç–∫—Ä–æ–µ—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞\n"
            "3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ <b>\"–ù–∞–ø–∏—Å–∞—Ç—å\"</b> –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"
        )
    else:
        # –ï—Å–ª–∏ username - –æ—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç –Ω–∞–ø—Ä—è–º—É—é
        username = SUPPORT_USER_ID.lstrip('@')
        support_url = f"https://t.me/{username}"
        button_text = "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É"
        instructions = (
            "üëá <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π:</b>\n"
            "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n"
            "2Ô∏è‚É£ –û—Ç–∫—Ä–æ–µ—Ç—Å—è —á–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n"
            "3Ô∏è‚É£ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å"
        )
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=button_text, url=support_url)],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    text = (
        "üÜò <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>\n\n"
        "üìù –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å:\n"
        "‚Ä¢ –í—ã–≤–æ–¥–æ–º –ø–æ–¥–∞—Ä–∫–æ–≤\n"
        "‚Ä¢ –ò–≥—Ä–æ–≤—ã–º –±–∞–ª–∞–Ω—Å–æ–º\n"
        "‚Ä¢ –†–∞–±–æ—Ç–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
        "‚Ä¢ –°—Ç–∞—Ç—É—Å–æ–º –∑–∞—è–≤–æ–∫\n\n"
        f"{instructions}\n\n"
        "‚è∞ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –æ–±—ã—á–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 —á–∞—Å–æ–≤"
    )
    
    if message_to_edit:
        await message_to_edit.edit_text(text=text, reply_markup=keyboard)
    else:
        await bot.send_message(chat_id=chat_id, text=text, reply_markup=keyboard)

async def notify_gift_withdrawal(user_id: int, gift_name: str, cost: int):
    """–£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –≤—ã–≤–æ–¥–µ –ø–æ–¥–∞—Ä–∫–∞"""
    try:
        await bot.send_message(
            chat_id=user_id,
            text=f"üéÅ <b>–í—ã–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω!</b>\n\n"
                 f"üì¶ –ü–æ–¥–∞—Ä–æ–∫: {gift_name}\n"
                 f"üí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∏–≥—Ä–æ–≤—ã—Ö –º–æ–Ω–µ—Ç: {cost}\n\n"
                 f"üöÄ –ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –≤–∞—à Telegram!"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

async def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Telegram –ø–æ–¥–∞—Ä–∫–æ–≤...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())