-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ user_stats –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–¥—Å—á–µ—Ç–∞ –≤—Å–µ—Ö –∏–≥—Ä
-- –ü—Ä–æ–±–ª–µ–º–∞: total_games —É–≤–µ–ª–∏—á–∏–≤–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–±–µ–¥–∞—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö
-- –†–µ—à–µ–Ω–∏–µ: total_games –¥–æ–ª–∂–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ 1 –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏–≥—Ä–µ (–ø–æ–±–µ–¥–µ –∏–ª–∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–∏)

CREATE OR REPLACE FUNCTION update_user_stats_on_transaction()
RETURNS TRIGGER AS $$
DECLARE
    current_stats RECORD;
    new_avg_multiplier DECIMAL(10,2);
    is_win BOOLEAN;
    bet_amount DECIMAL(12,2);
    win_amount DECIMAL(12,2);
BEGIN
    -- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    IF NEW.type NOT IN ('game_win', 'game_loss') THEN
        RETURN NEW;
    END IF;
    
    -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã
    is_win := (NEW.type = 'game_win');
    
    IF is_win THEN
        -- –ü—Ä–∏ –≤—ã–∏–≥—Ä—ã—à–µ: NEW.amount —Å–æ–¥–µ—Ä–∂–∏—Ç total_payout, –Ω—É–∂–Ω–æ –≤—ã—á–µ—Å—Ç—å —Å—Ç–∞–≤–∫—É
        -- –ù–∞–π–¥–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é game_bet —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏–≥—Ä—ã
        SELECT ABS(amount) INTO bet_amount 
        FROM transactions 
        WHERE user_id = NEW.user_id 
          AND game_id = NEW.game_id 
          AND type = 'game_bet' 
        LIMIT 1;
        
        bet_amount := COALESCE(bet_amount, 0);
        win_amount := NEW.amount - bet_amount;  -- –ß–∏—Å—Ç—ã–π –≤—ã–∏–≥—Ä—ã—à = total_payout - —Å—Ç–∞–≤–∫–∞
    ELSE
        -- –ü—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ: amount —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞–≤–∫—É
        bet_amount := ABS(NEW.amount);
        win_amount := 0;
    END IF;
    
    -- Get current stats for avg_multiplier calculation
    SELECT games_won, avg_multiplier INTO current_stats
    FROM user_stats WHERE user_id = NEW.user_id;
    
    -- Calculate new avg_multiplier only from winning games
    IF is_win AND NEW.multiplier IS NOT NULL THEN
        IF current_stats.games_won IS NULL OR current_stats.games_won = 0 THEN
            -- First winning game
            new_avg_multiplier = NEW.multiplier;
        ELSE
            -- Running average of winning games only
            new_avg_multiplier = (
                (current_stats.avg_multiplier * current_stats.games_won) + NEW.multiplier
            ) / (current_stats.games_won + 1);
        END IF;
    ELSE
        -- Keep existing avg_multiplier if this is not a win
        new_avg_multiplier = COALESCE(current_stats.avg_multiplier, 0);
    END IF;
    
    -- üîí –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –∏–≥—Ä - –∫–∞–∂–¥–∞—è –∏–≥—Ä–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç total_games –Ω–∞ 1
    IF NOT is_win THEN
        -- –ü—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ: —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º total_games, games_lost, total_wagered
        INSERT INTO user_stats (user_id, total_games, games_won, games_lost, total_wagered, total_won, wagered_balance, best_multiplier, avg_multiplier)
        VALUES (NEW.user_id, 1, 0, 1, bet_amount, 0, 0, 0, 0)
        ON CONFLICT (user_id) DO UPDATE SET
            total_games = user_stats.total_games + 1,
            games_lost = user_stats.games_lost + 1,
            total_wagered = user_stats.total_wagered + bet_amount,
            updated_at = NOW();
    ELSE
        -- üîí –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏ –≤—ã–∏–≥—Ä—ã—à–µ –í–°–ï–ì–î–ê —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º total_games –Ω–∞ 1
        -- –ö–∞–∂–¥–∞—è –∏–≥—Ä–∞ (–ø–æ–±–µ–¥–∞ –∏–ª–∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ) –¥–æ–ª–∂–Ω–∞ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä
        INSERT INTO user_stats (user_id, total_games, games_won, games_lost, total_wagered, total_won, wagered_balance, best_multiplier, avg_multiplier)
        VALUES (NEW.user_id, 1, 1, 0, 0, win_amount, win_amount, COALESCE(NEW.multiplier, 0), new_avg_multiplier)
        ON CONFLICT (user_id) DO UPDATE SET
            -- üîí –ò–°–ü–†–ê–í–õ–ï–ù–û: –í–°–ï–ì–î–ê —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º total_games –Ω–∞ 1 –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏–≥—Ä–µ
            total_games = user_stats.total_games + 1,
            games_won = user_stats.games_won + 1,
            total_won = user_stats.total_won + win_amount,
            wagered_balance = user_stats.wagered_balance + win_amount,
            best_multiplier = GREATEST(user_stats.best_multiplier, COALESCE(NEW.multiplier, 0)),
            avg_multiplier = new_avg_multiplier,
            updated_at = NOW();
    END IF;
    
    RETURN NEW;
END;
$$ language 'plpgsql';

-- –¢—Ä–∏–≥–≥–µ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏