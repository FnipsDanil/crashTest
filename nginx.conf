worker_processes auto;
worker_rlimit_nofile 65536;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 300;
    client_max_body_size 50m;
    server_tokens off;

    # Rate limiting disabled - no limits
    # limit_req_zone $binary_remote_addr zone=general_limit:10m rate=50r/s;
    # limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/s;
    # limit_req_zone $binary_remote_addr zone=game_limit:10m rate=100r/s;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/x-javascript
        text/css
        text/javascript
        text/plain
        text/xml
        application/xml
        application/xml+rss
        application/wasm;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name homecakes.site grafana.homecakes.site;
        return 301 https://$host$request_uri;
    }

    # Grafana server
    server {
        listen 443 ssl;
        http2 on;
        server_name grafana.homecakes.site;

        # SSL Configuration
        ssl_certificate     /etc/letsencrypt/live/homecakes.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/homecakes.site/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Security Headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Frame-Options "DENY" always;

        # Basic Auth for Grafana
        auth_basic "Grafana Monitoring";
        auth_basic_user_file /etc/nginx/.htpasswd;

        location / {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # WebSocket support for Grafana Live
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name homecakes.site;

        # SSL Configuration
        ssl_certificate     /etc/letsencrypt/live/homecakes.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/homecakes.site/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Security Headers for Telegram Mini App
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # CRITICAL: Frame options for Telegram Mini App
        add_header X-Frame-Options "ALLOWALL" always;
        
        # CRITICAL: Telegram Mini App optimized CSP
        add_header Content-Security-Policy "default-src 'self' https://telegram.org https://web.telegram.org; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org https://web.telegram.org https://*.telegram.org; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://telegram.org https://web.telegram.org; font-src 'self' https://fonts.gstatic.com https://telegram.org https://web.telegram.org; img-src 'self' data: https: blob: https://telegram.org https://web.telegram.org; connect-src 'self' https://api.telegram.org https://telegram.org https://web.telegram.org wss://homecakes.site ws://homecakes.site wss: ws:; frame-ancestors https://web.telegram.org https://telegram.org https://*.telegram.org; media-src 'self' data: blob: https://telegram.org https://web.telegram.org; worker-src 'self' blob:;" always;


        # CORS Configuration for Telegram Mini App
        location ~ /options {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Telegram-Init-Data" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # WebSocket for real-time game updates
        location /ws/ {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
            
            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 60s;
            
            # Disable buffering for real-time
            proxy_buffering off;
            proxy_cache off;
        }

        # API endpoints
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
            
            # CORS for API - All Telegram platforms
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Telegram-Init-Data" always;
        }

        # Game action endpoints  
        location ~ ^/(join|cashout|current-state|player-status|balance|leaderboard|verify-user|purchase-gift|create-invoice|payment-status|payment-requests|gifts)$ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
            
            # CORS for game actions - All Telegram platforms
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Telegram-Init-Data" always;
        }

        # User stats endpoints with path parameters
        location ~ ^/user-stats/[0-9]+/?$ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
            
            # CORS for user stats - All Telegram platforms
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Telegram-Init-Data" always;
        }

        # User language endpoints with path parameters
        location ~ ^/user-language/[0-9]+/?$ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
            
            # CORS for user language - All Telegram platforms
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Telegram-Init-Data" always;
        }


        # Prometheus metrics (защищено базовой аутентификацией)
        location /prometheus/ {
            # Базовая HTTP аутентификация
            auth_basic "Prometheus Metrics";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            # Ограничение доступа по IP
            # allow 192.168.1.0/24;
            # allow 10.0.0.0/8;
            # deny all;
            
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для больших запросов
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Webhook endpoint (no rate limiting for payment confirmations)
        location /webhook {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
        }

        # Gift images from backend assets (exact prefix match to override regex)
        location ^~ /assets/gifts/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache gift images
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # CORS for gift images
            add_header Access-Control-Allow-Origin "*" always;
        }

        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|wasm)$ {
            proxy_pass http://frontend:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Cache static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # CORS for assets - All Telegram platforms
            add_header Access-Control-Allow-Origin "*" always;
        }


        # Main frontend application
        location / {
            proxy_pass http://frontend:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS for main app - All Telegram platforms
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Telegram-Init-Data" always;
            
            # No cache for HTML
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        # Error pages
        error_page 429 /rate_limit_error.html;
        error_page 502 503 504 /maintenance.html;
        
        location = /rate_limit_error.html {
            internal;
            default_type text/html;
            return 429 '<!DOCTYPE html><html><head><title>Rate Limited</title></head><body><h1>Too Many Requests</h1><p>Please wait before making more requests.</p></body></html>';
        }
        
        location = /maintenance.html {
            internal;
            default_type text/html;
            return 503 '<!DOCTYPE html><html><head><title>Maintenance</title></head><body><h1>Service Temporarily Unavailable</h1><p>The service is currently under maintenance.</p></body></html>';
        }
    }
}